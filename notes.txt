create a c file
compile it with:
make *filename*
execute it with:
./*compiledfilename*

now, make is just a shortcut

better to use:
clang hello.c
which generates:
a.out
then ./a.out

but since a.out is not a clear name,
it's better to use:
clang -o hello hello.c -l*any additional header files outside main c headers* 
(-o means change the output of the file generated by clang to be hello)
which generates the output file in the name of hello, with the clang command taking arguments.
thus, you can run:
./hello
and it executes normally.

but this gets tedious, so we just use make.